name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup mono
        run: |
          sudo apt-get update
          sudo apt-get install -qy --no-install-recommends mono-runtime

      # - name: Setup environment
      #   run: |
      #     apt-get update
      #     apt-get install -y --no-install-recommends gnupg dirmngr
      #     rm -rf /var/lib/apt/lists/*
      #     export GNUPGHOME="$(mktemp -d)"
      #     gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
      #     gpg --batch --export --armor 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF > /etc/apt/trusted.gpg.d/mono.gpg.asc
      #     gpgconf --kill all
      #     rm -rf "$GNUPGHOME"
      #     apt-key list | grep Xamarin
      #     apt-get purge -y --auto-remove gnupg dirmngr

      # - name: Setup mono
      #   run: |
      #     echo "deb http://download.mono-project.com/repo/debian stable-buster/snapshots/$MONO_VERSION main" > /etc/apt/sources.list.d/mono-official-stable.list
      #     apt-get update
      #     apt-get install -y mono-runtime
      #     rm -rf /var/lib/apt/lists/* /tmp/*
      #   env:
      #     MONO_VERSION: 6.10.0.104

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Install dependencies
        run: dotnet restore Test/Test/Test.csproj

      - name: Build
        run: dotnet build Test/Test/Test.csproj --configuration Release --no-restore
